How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By removing the lines which were not changed between versions

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having easy access to the entire history of a file would make me a more efficient programmer by cutting down
    on the time it takes to track down changes. Also, I won't need to remember as much. Any time a process can be automated, this increases the time that you can spend thinking about problems which are not as trivial.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: you probably think more about changes made when you have to manually commit and the resulting committed code may be on average more complete / less buggy - each change makes more logical sense

    Cons: maybe you tend to make changes less often? Human error prone - too big or too small

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Maybe because this allows you to think more about the larger picture - a bug fix might span multiple files and fixing it all in one go may provide a better workflow. Google Docs is less geared towards coding.

How can you use the commands git log and git diff to view the history of files?

    log will show full commit history of repository (use --status to provide some more details of commits)
    diff allows you to compare differences between specific commits (green and red colors are very helpful!)
    (git config --global color.ui auto)

How might using version control make you more confident to make changes that
could break something?

    It will always be effortless to switch to a version in which nothing is broken - all the better to provide meaningful and segmented commits, each one being as distinct as possible! (without being too long)

Now that you have your workspace set up, what do you want to try using Git for?

    I want to properly set up on ouhep06 as well and then use it for all coding needs!
